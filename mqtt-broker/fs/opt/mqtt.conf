log_format SSL '$remote_addr <$protocol/$ssl_protocol + $ssl_cipher> $ssl_ciphers ($session_time)';
server {
	listen [::]:8883 ssl;
	listen 0.0.0.0:8883 ssl;
	listen [::]:8884;
	listen 0.0.0.0:8884;

	ssl_session_cache shared:SSL-STREAM:1m;
	ssl_session_timeout 1440m;
	ssl_protocols TLSv1.3 TLSv1.2;
	ssl_prefer_server_ciphers on;
	# Using list of ciphers from "Bulletproof SSL and TLS"
	# ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA";
	# ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	include /etc/letsencrypt/nginx/load.conf;
	ssl_stapling on;
	ssl_stapling_verify on;

	# access_log /var/log/nginx/mqtt.log SSL;
	# error_log /var/log/nginx/mqtt.err.log info;
	proxy_pass unix:/run/sockets/mqtt.sock;
}
