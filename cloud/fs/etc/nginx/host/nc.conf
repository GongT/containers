map $arg_v $asset_immutable {
	"" "";
	default ", immutable";
}

server {
	listen unix:/run/sockets/next-cloud.sock default_server;
	server_name _;

	set $socket "nextcloud";
	root /usr/share/nextcloud;
	index index.php;

	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;
	add_header Referrer-Policy no-referrer;

	fastcgi_hide_header X-Powered-By;

	client_max_body_size 10G;

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	location ^~ /.well-known {
		# The rules in this block are an adaptation of the rules
		# in `.htaccess` that concern `/.well-known`.

		location = /.well-known/carddav { return 301 /remote.php/dav/; }
		location = /.well-known/caldav  { return 301 /remote.php/dav/; }
		location = /.well-known/webfinger { return 301 /index.php/.well-known/webfinger; }
		location = /.well-known/nodeinfo { return 301 /index.php/.well-known/nodeinfo; }

		location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
		location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

		# Let Nextcloud's API for `/.well-known` URIs handle all other
		# requests by passing them to the front-end controller.
		return 301 /index.php$request_uri;
	}

	location = / {
		if ( $http_user_agent ~ ^DavClnt ) {
			return 302 /remote.php/webdav/$is_args$args;
		}
	}

	location / {
		rewrite ^ /index.php;
	}

	location ^~ /phpinfo {
		root /opt;
		try_files $uri =404;
		include conf/fastcgi_params;
		fastcgi_pass unix:/run/php-fpm/nextcloud.sock;
		break;
	}

	location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
		deny all;
	}
	location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) {
		deny all;
	}

	location ~ \.php(?:$|/) {
		# Required for legacy support
		rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|.+\/richdocumentscode(_arm64)?\/proxy) /index.php$request_uri;

		fastcgi_pass unix:/run/php-fpm/nextcloud.sock;
		fastcgi_param modHeadersAvailable true;
		fastcgi_param front_controller_active true;
		include conf/pathinfo.conf;
		try_files $fastcgi_script_name =404;
		break;
	}

	location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) {
		try_files $uri/ =404;
		index index.php;
	}

	# Adding the cache control header for js, css and map files
	# Make sure it is BELOW the PHP block
	location ~ \.(?:css|js|mjs|svg|gif|png|jpg|ico|wasm|tflite|map|ogg|flac)$ {
		try_files $uri /index.php$request_uri;
		# HTTP response headers borrowed from Nextcloud `.htaccess`
		add_header Cache-Control                     "public, max-age=15778463$asset_immutable";
		add_header Referrer-Policy                   "no-referrer"       always;
		add_header X-Content-Type-Options            "nosniff"           always;
		add_header X-Frame-Options                   "SAMEORIGIN"        always;
		add_header X-Permitted-Cross-Domain-Policies "none"              always;
		add_header X-Robots-Tag                      "noindex, nofollow" always;
		add_header X-XSS-Protection                  "1; mode=block"     always;
		access_log off;     # Optional: Don't log access to assets
	}
	location ~ \.woff2?$ {
		try_files $uri /index.php$request_uri;
		expires 7d;         # Cache-Control policy borrowed from `.htaccess`
		access_log off;     # Optional: Don't log access to assets
	}

	location /remote {
		return 301 /remote.php$request_uri;
	}

	location ~ \.(?:png|html|ttf|ico|jpg|jpeg|bcmap)$ {
		try_files $uri /index.php$request_uri;
		# Optional: Don't log access to other assets
		access_log off;
	}
	location ^~ /oss {
		alias /data/rk920223/files/objectstore;
		add_header 'Cache-control' 'public, immutable';
		autoindex on;
		break;
	}
}
