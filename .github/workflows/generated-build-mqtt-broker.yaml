name: "mqtt-broker"
on:
  workflow_dispatch:
    inputs:
      # skipEarlyDetect:
      #   description: Skip early change detect
      #   required: false
      #   default: ""
      brandNew:
        description: Skip pull last image
        required: false
        default: ""
  push:
    paths:
      - "mqtt-broker/**"
      - "!mqtt-broker/install-service.sh"
      - ".github/workflows/generated-build-mqtt-broker.yaml"
    # - common
    branches:
      - master
env:
  NODE_ENV: production
  PROJECT_NAME: "mqtt-broker"
  # TRIGGER_SKIP_EARLY_DETECT: ${{ github.event.inputs.skipEarlyDetect }}
jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        timeout-minutes: 5
        uses: GongT/cancel-previous-workflows@6dd7af8389c9434cc893fd33b58609e73db49fbe
        env:
          DELETE: "yes"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: "生成镜像并推送"
    runs-on: ubuntu-latest
    steps:
      - name: "强制清理项目（如果有）"
        timeout-minutes: 1
        shell: bash
        run: |
          if [[ -e ".git" ]]; then
            git reset --hard --recurse-submodule || true
            git clean -ffdx || true
            git submodule foreach bash -c "git clean -ffdx" || true
          fi

      - name: "获取代码"
        uses: actions/checkout@v2
        timeout-minutes: 1
        with:
          submodules: "recursive"
          clean: true
          fetch-depth: 2

      - name: "初始化登录信息和基本环境"
        shell: bash
        timeout-minutes: 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/prepare-secrets.sh

      - name: "缓存下载和软件包数据"
        uses: actions/cache@v2
        with:
          path: ${{ env.SYSTEM_COMMON_CACHE }}
          key: common-cache

      - name: "从ghcr.io获取上次生成的镜像"
        shell: bash
        if: github.event.inputs.brandNew == ''
        timeout-minutes: 1
        run: ./_scripts_/retry.sh podman pull "docker://ghcr.io/gongt/$PROJECT_NAME"

      - name: "运行构建过程"
        timeout-minutes: 30
        env:
          REWRITE_IMAGE_NAME: ${{ env.MIDDLE_IMAGE_FQDN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash _scripts_/ci-single-build.sh

      - name: "发布镜像"
        timeout-minutes: 20
        shell: bash
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/publish_all_targets.sh
