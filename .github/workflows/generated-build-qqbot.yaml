name: "qqbot"
on:
  workflow_dispatch:
    inputs:
      brandNew:
        description: 跳过拉取上次构建结果
        required: false
        default: ""
      forceRebuild:
        description: 强制全部重新构建，无视缓存
        required: false
        default: "no"
  schedule:
    - cron:  '47 3 * * *'
  push:
    paths:
      - "qqbot/**"
      - "!qqbot/install-service.sh"
    #  - ".github/workflows/generated-build-qqbot.yaml"
    # - common
    branches:
      - master
env:
  NODE_ENV: production
  PROJECT_NAME: "qqbot"
jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        timeout-minutes: 5
        uses: GongT/cancel-previous-workflows@6dd7af8389c9434cc893fd33b58609e73db49fbe
        env:
          DELETE: "yes"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: "生成镜像"
    runs-on: ubuntu-latest
    outputs:
      DOMAIN_ARRAY: ${{ steps.result.outputs.DOMAIN_ARRAY }}
    steps:
      - name: "强制清理项目（如果有）"
        timeout-minutes: 1
        shell: bash
        run: |
          if [[ -e ".git" ]]; then
            git reset --hard --recurse-submodule || true
            git clean -ffdx || true
            git submodule foreach bash -c "git clean -ffdx" || true
          fi

      - name: "获取代码"
        uses: actions/checkout@v2
        timeout-minutes: 1
        with:
          submodules: "recursive"
          clean: true
          fetch-depth: 2

      - name: "初始化登录信息和基本环境"
        shell: bash
        timeout-minutes: 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/prepare-secrets.sh ghcr.io

      - name: "缓存下载和软件包数据"
        uses: actions/cache@v2
        with:
          path: ${{ env.SYSTEM_COMMON_CACHE }}
          key: common-cache-qqbot-${{ hashFiles('qqbot') }}
          restore-keys: |
            common-cache-qqbot
            common-cache-

      - name: "从ghcr.io获取上次生成的镜像"
        shell: bash
        if: github.event.inputs.brandNew == ''
        timeout-minutes: 1
        run: ./_scripts_/retry.sh podman pull "docker://ghcr.io/gongt/$PROJECT_NAME"

      - name: "运行构建过程"
        shell: bash
        timeout-minutes: 30
        env:
          BUILDAH_FORCE: ${{ github.event.inputs.forceRebuild }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash _scripts_/ci-single-build.sh

      - id: result
        name: "输出状态"
        shell: bash
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/publish_create_index.sh

  publish:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        domain: ${{ fromJson(needs.build.outputs.DOMAIN_ARRAY) }}
      fail-fast: false
    steps:
      - name: "获取代码"
        uses: actions/checkout@v2
        timeout-minutes: 1
        with:
          submodules: "recursive"
          clean: true
          fetch-depth: 2

      - name: "初始化登录信息和基本环境"
        shell: bash
        timeout-minutes: 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/prepare-secrets.sh ${{ matrix.domain }}

      - name: "发布镜像"
        timeout-minutes: 5
        shell: bash
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: bash _scripts_/publish_all_targets.sh ${{ matrix.domain }}
